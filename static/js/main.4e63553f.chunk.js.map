{"version":3,"sources":["components/Clima.js","components/Error.js","components/Formulario.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Clima","resultado","name","main","kelvin","className","parseFloat","temp","toFixed","temp_max","temp_min","Error","mensaje","Formulario","busqueda","setBusqueda","setConsultar","useState","error","setError","ciudad","pais","handleChange","e","target","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","propTyes","PropTypes","object","isRequired","func","Header","titulo","href","App","componente","consultar","setResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e63553f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Clima = ({ resultado }) => {\r\n    // extraer los valores\r\n\r\n    const { name, main } = resultado;\r\n\r\n    if (!name) return null;\r\n\r\n    const kelvin = 274.15;\r\n\r\n    return (\r\n        <div className='card-panel white col s12'>\r\n            <div className='black-text'>\r\n                <h2>El clima de {name} es:</h2>\r\n                <p className='temperatura'>\r\n                    {parseFloat(main.temp - kelvin, 10).toFixed(1)}{' '}\r\n                    <span>&#x2103;</span>\r\n                </p>\r\n\r\n                <p>\r\n                    Temperatura Máxima:\r\n                    {parseFloat(main.temp_max - kelvin, 10).toFixed(1)}{' '}\r\n                    <span>&#x2103;</span>\r\n                </p>\r\n\r\n                <p>\r\n                    Temperatura Mínima:\r\n                    {parseFloat(main.temp_min - kelvin, 10).toFixed(1)}{' '}\r\n                    <span>&#x2103;</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nClima.propTypes = {\r\n    resultado: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Clima;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({ mensaje }) => {\r\n    return <p className='red darken-4 error'>{mensaje}</p>;\r\n};\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({ busqueda, setBusqueda, setConsultar }) => {\r\n    const [error, setError] = useState(false);\r\n\r\n    // extraer ciudad y pais\r\n    const { ciudad, pais } = busqueda;\r\n\r\n    // funcion que coloca los elementos en el state\r\n    const handleChange = e => {\r\n        // actualizar el state\r\n        setBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    // cuando el usuario da submit al form\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if (ciudad.trim() === '' || pais.trim() === '') {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        setError(false);\r\n\r\n        // pasarlo al componente principal\r\n        setConsultar(true);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {error ? <Error mensaje='Ambos campos son obligatorios' /> : null}\r\n\r\n            <div className='input-field col s12'>\r\n                <input\r\n                    type='text'\r\n                    name='ciudad'\r\n                    id='ciudad'\r\n                    value={ciudad}\r\n                    onChange={handleChange}\r\n                />\r\n                <label htmlFor='ciudad'>Ciudad: </label>\r\n            </div>\r\n\r\n            <div className='input-field col s12'>\r\n                <select\r\n                    name='pais'\r\n                    id='pais'\r\n                    value={pais}\r\n                    onChange={handleChange}>\r\n                    <option value=''>-Seleccione un Pais</option>\r\n                    <option value='AR'>Argentina</option>\r\n                    <option value='CL'>Chile</option>\r\n                    <option value='CO'>Colombia</option>\r\n                    <option value='ES'>España</option>\r\n                    <option value='US'>Estados Unidos</option>\r\n                    <option value='MX'>México</option>\r\n                    <option value='PE'>Perú</option>\r\n                </select>\r\n                <label htmlFor='pais'>Pais: </label>\r\n            </div>\r\n            <div className='input-field col s12'>\r\n                <button\r\n                    type='submit'\r\n                    className='waves-effect waves-light btn-large btn-block light-blue darken-4'>\r\n                    Buscar Clima\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nFormulario.propTyes = {\r\n    busqueda: PropTypes.object.isRequired,\r\n    setBusqueda: PropTypes.func.isRequired,\r\n    setConsultar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Formulario;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ titulo }) => {\r\n    return (\r\n        <nav>\r\n            <div className='nav-wrapper light-blue darken-2'>\r\n                <a href='#!' className='brand-logo'>\r\n                    {titulo}\r\n                </a>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { Fragment, useState, useEffect } from 'react';\nimport Clima from './components/Clima';\nimport Formulario from './components/Formulario';\nimport Header from './components/Header';\nimport Error from './components/Error';\nfunction App() {\n    // state del formulario\n    const [busqueda, setBusqueda] = useState({\n        ciudad: '',\n        pais: '',\n    });\n\n    const [consultar, setConsultar] = useState(false);\n    const [resultado, setResultado] = useState({});\n    const [error, setError] = useState(false);\n    const { ciudad, pais } = busqueda;\n\n    useEffect(() => {\n        const consultarAPI = async () => {\n            if (consultar) {\n                const appId = 'f12c9fa4b85fbd6913cff6f07e3ba5eb';\n                const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n\n                const respuesta = await fetch(url);\n                const resultado = await respuesta.json();\n\n                setResultado(resultado);\n                setConsultar(false);\n\n                // Detecta si hubo resultados correctos en la consulta\n                if (resultado.cod === '404') {\n                    setError(true);\n                } else {\n                    setError(false);\n                }\n            }\n        };\n\n        consultarAPI();\n    }, [consultar]);\n\n    let componente;\n    if (error) {\n        componente = <Error mensaje='No hay resultados' />;\n    } else {\n        componente = <Clima resultado={resultado} />;\n    }\n\n    return (\n        <Fragment>\n            <Header titulo='Clima React App' />\n\n            <div className='contenedor-form'>\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col m6 s12'>\n                            <Formulario\n                                busqueda={busqueda}\n                                setBusqueda={setBusqueda}\n                                setConsultar={setConsultar}\n                            />\n                        </div>\n                        <div className='col m6 s12'>{componente}</div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}